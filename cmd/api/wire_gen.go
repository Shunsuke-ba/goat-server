// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/Shunsuke-ba/goat-server/mod/app"
	"github.com/Shunsuke-ba/goat-server/mod/app/domain"
	"github.com/Shunsuke-ba/goat-server/mod/app/handler"
	basketball2 "github.com/Shunsuke-ba/goat-server/mod/app/handler/basketball"
	soccer2 "github.com/Shunsuke-ba/goat-server/mod/app/handler/soccer"
	"github.com/Shunsuke-ba/goat-server/mod/app/usecase"
	"github.com/Shunsuke-ba/goat-server/mod/app/usecase/basketball"
	"github.com/Shunsuke-ba/goat-server/mod/app/usecase/soccer"
)

// Injectors from wire.go:

func initApplication(ctx context.Context) app.AllRepository {
	health := domain.Health{}
	usecaseHealth := usecase.ProvideHealthCase(ctx, health)
	provideHealth := handler.ProvideHealthHandler(usecaseHealth)
	results := basketball.ProvideResultsCase(ctx)
	provideResults := basketball2.ProvideResultsHandler(results)
	schedules := basketball.ProvideShedulesCase(ctx)
	provideSchedules := basketball2.ProvideSchedulesHandler(schedules)
	matches := basketball.ProvideMatchesCase(ctx)
	provideMatches := basketball2.ProvideMatchesHandler(matches)
	soccerResults := soccer.ProvideResultsCase(ctx)
	soccerProvideResults := soccer2.ProvideResultsHandler(soccerResults)
	allRepository := app.NewAllRepository(provideHealth, provideResults, provideSchedules, provideMatches, soccerProvideResults)
	return allRepository
}
